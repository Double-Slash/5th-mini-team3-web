{"ast":null,"code":"import { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from \"../actions\"; // function loginAPI(data) {\n//   return axios.post(\"/user/login\", data, { withCredentials: true });\n// }\n// function logoutAPI() {\n//   return axios.get(\"/user/logout\");\n// }\n\nfunction signupAPI(data) {\n  return axios.post(\"/sign_up/create\", data);\n}\n\nfunction* login(action) {\n  try {\n    // const result = yield call(loginAPI, action.data); // 그냥 인자로 넘기면 알아서 들어감. 더받고싶으면 더 넣으면 댐\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data //\tresult.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data //\terr.response.data 고정\n\n    });\n  }\n}\n\nfunction* logout() {\n  try {\n    // const result = yield call(logoutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS //   data: result.data, //result.data 고정\n\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data //  err.response.data 고정\n\n    });\n  }\n}\n\nfunction* signup(action) {\n  try {\n    console.log(action.data);\n    const result = yield call(signupAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS //   data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logout);\n}\n\nfunction* watchSignup() {\n  yield takeLatest(SIGN_UP_REQUEST, signup);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), //  call\n  fork(watchLogout), fork(watchSignup)]);\n}","map":{"version":3,"sources":["C:/Users/winco/Desktop/ds/5th-mini-team3-web/team3_mini/Frontend/sagas/user.js"],"names":["all","fork","put","takeLatest","delay","call","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_IN_REQUEST","LOG_OUT_REQUEST","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","signupAPI","data","post","login","action","type","result","err","error","response","logout","signup","console","log","watchLogin","watchLogout","watchSignup","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,eAAzC,EAA0DC,eAA1D,EAA2EC,cAA3E,EAA2FC,eAA3F,EAA4GC,eAA5G,EAA6HC,eAA7H,EAA8IC,eAA9I,QAAqK,YAArK,C,CAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAOX,KAAK,CAACY,IAAN,CAAW,iBAAX,EAA8BD,IAA9B,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAEd,cADE;AAERU,MAAAA,IAAI,EAAEK,MAAM,CAACL,IAFL,CAEW;;AAFX,KAAD,CAAT;AAID,GAPD,CAOE,OAAOM,GAAP,EAAY;AACZ,UAAMrB,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAEb,cADE;AAERgB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR,IAFZ,CAEkB;;AAFlB,KAAD,CAAT;AAID;AACF;;AAED,UAAUS,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMtB,KAAK,CAAC,IAAD,CAAX;AACA,UAAMF,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAEZ,eADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOc,GAAP,EAAY;AACZ,UAAMrB,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAEX,eADE;AAERc,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR,IAFZ,CAEkB;;AAFlB,KAAD,CAAT;AAID;AACF;;AACD,UAAUU,MAAV,CAAiBP,MAAjB,EAAyB;AACvB,MAAI;AACFQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACH,IAAnB;AACA,UAAMK,MAAM,GAAG,MAAMjB,IAAI,CAACW,SAAD,EAAYI,MAAM,CAACH,IAAnB,CAAzB;AACA,UAAMf,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAEP,eADE,CAER;;AAFQ,KAAD,CAAT;AAID,GAPD,CAOE,OAAOS,GAAP,EAAY;AACZ,UAAMrB,GAAG,CAAC;AACRmB,MAAAA,IAAI,EAAEN,eADE;AAERS,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaR;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUa,UAAV,GAAuB;AACrB,QAAM3B,UAAU,CAACQ,cAAD,EAAiBQ,KAAjB,CAAhB;AACD;;AAED,UAAUY,WAAV,GAAwB;AACtB,QAAM5B,UAAU,CAACS,eAAD,EAAkBc,MAAlB,CAAhB;AACD;;AACD,UAAUM,WAAV,GAAwB;AACtB,QAAM7B,UAAU,CAACU,eAAD,EAAkBc,MAAlB,CAAhB;AACD;;AACD,eAAe,UAAUM,QAAV,GAAqB;AAClC,QAAMjC,GAAG,CAAC,CACRC,IAAI,CAAC6B,UAAD,CADI,EACU;AAClB7B,EAAAA,IAAI,CAAC8B,WAAD,CAFI,EAGR9B,IAAI,CAAC+B,WAAD,CAHI,CAAD,CAAT;AAKD","sourcesContent":["import { all, fork, put, takeLatest, delay, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_IN_REQUEST, LOG_OUT_REQUEST, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from \"../actions\";\r\n\r\n// function loginAPI(data) {\r\n//   return axios.post(\"/user/login\", data, { withCredentials: true });\r\n// }\r\n\r\n// function logoutAPI() {\r\n//   return axios.get(\"/user/logout\");\r\n// }\r\n\r\nfunction signupAPI(data) {\r\n  return axios.post(\"/sign_up/create\", data);\r\n}\r\n\r\nfunction* login(action) {\r\n  try {\r\n    // const result = yield call(loginAPI, action.data); // 그냥 인자로 넘기면 알아서 들어감. 더받고싶으면 더 넣으면 댐\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data, //\tresult.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data, //\terr.response.data 고정\r\n    });\r\n  }\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    // const result = yield call(logoutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      //   data: result.data, //result.data 고정\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data, //  err.response.data 고정\r\n    });\r\n  }\r\n}\r\nfunction* signup(action) {\r\n  try {\r\n    console.log(action.data);\r\n    const result = yield call(signupAPI, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      //   data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logout);\r\n}\r\nfunction* watchSignup() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signup);\r\n}\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin), //  call\r\n    fork(watchLogout),\r\n    fork(watchSignup),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}